name: stable images

on:
  push:
    branches:
      - main

jobs:

  build_push_stable:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        dhis2_version:
          - "2.37.0"
          - "2.36.4"
          - "2.36.3"
          - "2.36.2"
          - "2.36.1"
          - "2.35.8"
          - "2.35.7"
          - "2.35.6"
          - "2.35.5"
          - "2.35.4"
          - "2.35.3"
          - "2.35.2"
          - "2.35.1"
          - "2.35.0"
        java_major: ["11"]  # 11 should always be the default; Bugs specific to Java 8 are unlikely to be fixed for DHIS2 2.35 and up
        tomcat_version: ["9.0.55"]
        include:
          # Use Tomcat 8.5 and Java 8 for DHIS2 versions incompatible with Java 11
          - { dhis2_version: "2.34.7", java_major: "8", tomcat_version: "8.5.73" }
          - { dhis2_version: "2.34.6", java_major: "8", tomcat_version: "8.5.73" }
          - { dhis2_version: "2.34.5", java_major: "8", tomcat_version: "8.5.73" }
          - { dhis2_version: "2.34.3", java_major: "8", tomcat_version: "8.5.73" }
          - { dhis2_version: "2.34.2", java_major: "8", tomcat_version: "8.5.73" }
          - { dhis2_version: "2.34.1", java_major: "8", tomcat_version: "8.5.73" }
          - { dhis2_version: "2.34.0", java_major: "8", tomcat_version: "8.5.73" }

    steps:

      - name: Determine DHIS2_MAJOR and image tags
        env:
          DHIS2_VERSION: ${{ matrix.dhis2_version }}
          JAVA_MAJOR: ${{ matrix.java_major }}
          TOMCAT_VERSION: ${{ matrix.tomcat_version }}
        run: |
          # Define latest versions (static until determined automatically)

          LATEST_TOMCAT_9='9.0.55'
          LATEST_TOMCAT_8='8.5.73'

          LATEST_DHIS2_237='2.37.0'
          LATEST_DHIS2_236='2.36.4'
          LATEST_DHIS2_235='2.35.8'
          LATEST_DHIS2_234='2.34.7'
          LATEST_DHIS2_233='2.33.9'
          LATEST_DHIS2_232='2.32.7'
          LATEST_DHIS2_231='2.31.9'

          LATEST_DHIS2_VERSION="$LATEST_DHIS2_237"

          ########

          DHIS2_MAJOR="$( sed -r -e 's/^(2\.[0-9]{2})\.[0-9]{1,2}$/\1/' <<<"${DHIS2_VERSION}" )"
          # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
          echo "DHIS2_MAJOR=$DHIS2_MAJOR" | tee -a $GITHUB_ENV

          TOMCAT_MAJOR="$( sed -r -e 's/^([0-9]+)\..*/\1/' <<<"${TOMCAT_VERSION}" )"
          echo "TOMCAT_MAJOR=$TOMCAT_MAJOR" | tee -a $GITHUB_ENV

          ########

          echo "IS_DEV=false" | tee -a $GITHUB_ENV
          echo "IS_TOMCAT_LATEST=false" | tee -a $GITHUB_ENV
          echo "IS_TOMCAT_LATEST_AND_DHIS2_MAJOR_LATEST=false" | tee -a $GITHUB_ENV
          echo "IS_TOMCAT_LATEST_AND_DHIS2_OVERALL_LATEST=false" | tee -a $GITHUB_ENV

          # If dev...
          if [[ $DHIS2_MAJOR == 'dev' ]]; then
            # Then, tag as: "dev"
            echo "IS_DEV=true" | tee -a $GITHUB_ENV

          else
            # If latest Tomcat version within Tomcat major...
            if [[ $TOMCAT_VERSION == "$LATEST_TOMCAT_9" ]] \
            || [[ $TOMCAT_VERSION == "$LATEST_TOMCAT_8" ]]
            then
              # Then, tag as: "${DHIS2_VERSION}-tomcat${TOMCAT_MAJOR}" and "${DHIS2_VERSION}"
              echo "IS_TOMCAT_LATEST=true" | tee -a $GITHUB_ENV

              # And, if latest $DHIS2_VERSION within $DHIS2_MAJOR...
              if [[ $DHIS2_VERSION == "$LATEST_DHIS2_237" ]] \
              || [[ $DHIS2_VERSION == "$LATEST_DHIS2_236" ]] \
              || [[ $DHIS2_VERSION == "$LATEST_DHIS2_235" ]] \
              || [[ $DHIS2_VERSION == "$LATEST_DHIS2_234" ]] \
              || [[ $DHIS2_VERSION == "$LATEST_DHIS2_233" ]] \
              || [[ $DHIS2_VERSION == "$LATEST_DHIS2_232" ]] \
              || [[ $DHIS2_VERSION == "$LATEST_DHIS2_231" ]]
              then
                # Then, tag as: "${DHIS2_MAJOR}"
                echo "IS_TOMCAT_LATEST_AND_DHIS2_MAJOR_LATEST=true" | tee -a $GITHUB_ENV
              fi

              # And, if latest ${DHIS2_VERSION} of all releases...
              if [[ $DHIS2_VERSION == "$LATEST_DHIS2_VERSION" ]]; then
                # Then, tag as: "latest"
                echo "IS_TOMCAT_LATEST_AND_DHIS2_OVERALL_LATEST=true" | tee -a $GITHUB_ENV
              fi
            fi
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository_owner }}/dhis2
          labels: |
            org.opencontainers.image.title=dhis2
            org.opencontainers.image.version=${{ matrix.dhis2_version }}
            org.opencontainers.image.base.name=docker.io/tomcat:${{ matrix.tomcat_version }}-jre${{ matrix.java_major }}-openjdk-slim-bullseye
            dhis2.build.version=${{ matrix.dhis2_version }}
            java.major=${{ matrix.java_major }}
            tomcat.major=${{ env.TOMCAT_MAJOR }}
            tomcat.version=${{ matrix.tomcat_version }}
          flavor: latest=false
          tags: |
            type=raw,value=${{ matrix.dhis2_version }}-tomcat${{ matrix.tomcat_version }}-jre${{ matrix.java_major }}-openjdk,enable=true
            type=raw,value=${{ matrix.dhis2_version }}-tomcat${{ env.TOMCAT_MAJOR }},enable=${{ env.IS_TOMCAT_LATEST }}
            type=raw,value=${{ matrix.dhis2_version }},enable=${{ env.IS_TOMCAT_LATEST }}
            type=raw,value=${{ env.DHIS2_MAJOR }},enable=${{ env.IS_TOMCAT_LATEST_AND_DHIS2_MAJOR_LATEST }}
            type=raw,value=latest,enable=${{ env.IS_TOMCAT_LATEST_AND_DHIS2_OVERALL_LATEST }}
            type=raw,value=dev,enable=${{ env.IS_DEV }}

      - name: Set up QEMU for amd64 and arm64
        uses: docker/setup-qemu-action@v1
        with:
          platforms: amd64,arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Multi-platform build and push ${{ matrix.dhis2_version }}-tomcat${{ matrix.tomcat_version }}-jre${{ matrix.java_major }}
        uses: docker/build-push-action@v2
        with:
          platforms: |
            linux/amd64
            linux/arm64
          # DHIS2_MAJOR was exported to the environment in a previous step
          build-args: |
            DHIS2_MAJOR=${{ env.DHIS2_MAJOR }}
            DHIS2_VERSION=${{ matrix.dhis2_version }}
            JAVA_MAJOR=${{ matrix.java_major }}
            TOMCAT_VERSION=${{ matrix.tomcat_version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          pull: true
          push: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}
          cache-from: type=registry,src=ghcr.io/${{ github.repository_owner }}/dhis2
          cache-to: type=registry,dest=ghcr.io/${{ github.repository_owner }}/dhis2,mode=max
